diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index fca8f9a36063..2f116da08ba6 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -4755,41 +4755,12 @@ static void nf_tables_unbind_set(const struct nft_ctx *ctx, struct nft_set *set,
 	}
 }
 
-static void nft_setelem_data_activate(const struct net *net,
-				      const struct nft_set *set,
-				      struct nft_set_elem *elem);
-
-static int nft_mapelem_activate(const struct nft_ctx *ctx,
-				struct nft_set *set,
-				const struct nft_set_iter *iter,
-				struct nft_set_elem *elem)
-{
-	nft_setelem_data_activate(ctx->net, set, elem);
-
-	return 0;
-}
-
-static void nft_map_activate(const struct nft_ctx *ctx, struct nft_set *set)
-{
-	struct nft_set_iter iter = {
-		.genmask	= nft_genmask_next(ctx->net),
-		.fn		= nft_mapelem_activate,
-	};
-
-	set->ops->walk(ctx, set, &iter);
-	WARN_ON_ONCE(iter.err);
-}
-
 void nf_tables_activate_set(const struct nft_ctx *ctx, struct nft_set *set)
 {
-	if (nft_set_is_anonymous(set)) {
-		if (set->flags & (NFT_SET_MAP | NFT_SET_OBJECT))
-			nft_map_activate(ctx, set);
-
+	if (nft_set_is_anonymous(set))
 		nft_clear(ctx->net, set);
-	}
 
-	nft_use_inc_restore(&set->use);
+	set->use++;
 }
 EXPORT_SYMBOL_GPL(nf_tables_activate_set);
 
@@ -4798,31 +4769,15 @@ void nf_tables_deactivate_set(const struct nft_ctx *ctx, struct nft_set *set,
 			      enum nft_trans_phase phase)
 {
 	switch (phase) {
-	case NFT_TRANS_PREPARE_ERROR:
-		nft_set_trans_unbind(ctx, set);
+	case NFT_TRANS_PREPARE:
 		if (nft_set_is_anonymous(set))
 			nft_deactivate_next(ctx->net, set);
-		else
-			list_del_rcu(&binding->list);
-
-		nft_use_dec(&set->use);
-		break;
-	case NFT_TRANS_PREPARE:
-		if (nft_set_is_anonymous(set)) {
-			if (set->flags & (NFT_SET_MAP | NFT_SET_OBJECT))
-				nft_map_deactivate(ctx, set);
 
-			nft_deactivate_next(ctx->net, set);
-		}
-		nft_use_dec(&set->use);
+		set->use--;
 		return;
 	case NFT_TRANS_ABORT:
 	case NFT_TRANS_RELEASE:
-		if (nft_set_is_anonymous(set) &&
-		    set->flags & (NFT_SET_MAP | NFT_SET_OBJECT))
-			nft_map_deactivate(ctx, set);
-
-		nft_use_dec(&set->use);
+		set->use--;
 		fallthrough;
 	default:
 		nf_tables_unbind_set(ctx, set, binding,
